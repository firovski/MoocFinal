<?php

namespace Proxies\__CG__\Mooc\QuizBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Quiz extends \Mooc\QuizBundle\Entity\Quiz implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'id', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'quiznom', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'quizdescription', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'dateajout', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'intro', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'type', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'time', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'idformateur', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'idcour');
        }

        return array('__isInitialized__', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'id', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'quiznom', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'quizdescription', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'dateajout', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'intro', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'type', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'time', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'idformateur', '' . "\0" . 'Mooc\\QuizBundle\\Entity\\Quiz' . "\0" . 'idcour');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Quiz $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuiznom($quiznom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuiznom', array($quiznom));

        return parent::setQuiznom($quiznom);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuiznom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuiznom', array());

        return parent::getQuiznom();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuizdescription($quizdescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuizdescription', array($quizdescription));

        return parent::setQuizdescription($quizdescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuizdescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuizdescription', array());

        return parent::getQuizdescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateajout($dateajout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateajout', array($dateajout));

        return parent::setDateajout($dateajout);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateajout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateajout', array());

        return parent::getDateajout();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntro($intro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntro', array($intro));

        return parent::setIntro($intro);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntro', array());

        return parent::getIntro();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setTime($time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTime', array($time));

        return parent::setTime($time);
    }

    /**
     * {@inheritDoc}
     */
    public function getTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTime', array());

        return parent::getTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdformateur(\Mooc\QuizBundle\Entity\Formateur $idformateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdformateur', array($idformateur));

        return parent::setIdformateur($idformateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdformateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdformateur', array());

        return parent::getIdformateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdcour(\Mooc\QuizBundle\Entity\Cour $idcour = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdcour', array($idcour));

        return parent::setIdcour($idcour);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdcour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdcour', array());

        return parent::getIdcour();
    }

}
